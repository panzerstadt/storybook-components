{"version":3,"sources":["components/Ghost/fetchGhost.module.css","components/Editable/blocks/generic/ImageWithText.module.css","components/Editable/blocks/aaronc/Text.module.css","components/Editable/blocks/aaronc/Image.module.css","components/Ghost/fetchGhost.js","components/Ghost/index.js","components/CommentBox/context.js","components/CommentBox/Comment.js","components/CommentBox/index.js","components/Editable/lib/firebase.js","components/Editable/Read.js","components/Editable/blocks/generic/ImageWithText.js","components/Editable/blocks/aaronc/Text.js","components/Editable/blocks/aaronc/Image.js","components/Editable/blocks/index.js","components/Editable/blocks/aaronc/PanningImage.js","components/Editable/Update.js","components/Editable/index.js","App.js","serviceWorker.js","index.js","components/CommentBox/Comments.module.css","components/Editable/Update.module.css","components/Editable/blocks/aaronc/PanningImage.module.css","components/Ghost/components/Gallery.module.css","components/CommentBox/Comment.module.css","components/CommentBox/Markdown.module.css","components/CommentBox/Reply.module.css","components/CommentBox/Button.module.css","logo.svg","components/CommentBox/index.module.css","components/Ghost/components/Blog.module.css","components/CommentBox/Rating.module.css","components/CommentBox/Card.module.css","components/Editable/Read.module.css"],"names":["module","exports","containerDiv","paginationDiv","pagebtn","pagination","disabled","paginationLeft","paginationRight","paginationText","dataBlockDiv","dataBlock","dataBlockImage","dndOverlay","dataBlockText","removeInputStyling","textBlock","text","author","api","GhostContentAPI","url","key","version","fetchGhost","props","posts","browse","limit","page","then","catch","e","console","log","createContext","react_default","a","createElement","App","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","reactConfig","Object","keys","map","v","concat","firebase","apps","length","initializeApp","ShowDB","_ref","_ref$databaseRef","databaseRef","onDBUpdate","_useState","useState","_useState2","slicedToArray","dbState","setDBState","useEffect","database","ref","on","snapshot","vals","val","className","styles","json","main_default","style","overflow","src","theme","DataBlock","data","onUpdate","mode","title","setTitle","_useState3","imageData","_useState4","image","setImage","handleUpdate","d","type","update","out","objectSpread","es","onDrop","acceptedFiles","rejectedFiles","f","reader","FileReader","onload","res","b64","target","result","readAsDataURL","_ref2","getRootProps","getInputProps","isDragActive","assign","alt","react_debounce_input_lib","minLength","debounceTimeout","value","onChange","textDims","height","width","textRef","useRef","setText","_useState5","_useState6","setAuthor","incomingData","k","_unused","i","id","setTimeout","current","clientHeight","clientWidth","newState","AaronC","Text","Image","heroImage","heroContainer","heroImg","animated","Generic","DB_REF","Update","onUpdated","children","imageBase64","content","setContent","dbRef","setDbRef","_useState7","_useState8","_useState9","_useState10","newDBState","setNewDBState","uid","_useState11","_useState12","editable","setEditable","output","Editable","toDelete","blocks","handleChange","margin","textAlign","warning","editButton","visibility","onClick","handleDelete","_useState13","_useState14","trashUID","setTrashUID","toConsumableArray","modeButton","backgroundColor","set","Read_ShowDB","state","_this2","this","setState","logo","components_Editable","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","comments","commentCount","addInput","inputLabel","heroPan","postDiv","postDivBorder","postDivPadding","imgDiv","img","textDiv","comment","showMore","hidden","left","right","top","minimize","username","date","actions","selected","code","blockquote","reply","panel","comment_as","button","circle","clickEffect","__webpack_require__","p","commentBox","postDivFull","flip","rating","count","up","down","thumbs_up","thumbs_down","card"],"mappings":"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","file":"static/js/main.8e73f995.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerDiv\":\"fetchGhost_containerDiv__3IuKq\",\"paginationDiv\":\"fetchGhost_paginationDiv__2Sa7o\",\"pagebtn\":\"fetchGhost_pagebtn__NU51y\",\"pagination\":\"fetchGhost_pagination__1oZOs fetchGhost_pagebtn__NU51y\",\"disabled\":\"fetchGhost_disabled__2jpC6 fetchGhost_pagination__1oZOs fetchGhost_pagebtn__NU51y\",\"paginationLeft\":\"fetchGhost_paginationLeft__3FidL fetchGhost_pagination__1oZOs fetchGhost_pagebtn__NU51y\",\"paginationRight\":\"fetchGhost_paginationRight__2vSuG fetchGhost_pagination__1oZOs fetchGhost_pagebtn__NU51y\",\"paginationText\":\"fetchGhost_paginationText__1SoH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBlockDiv\":\"ImageWithText_dataBlockDiv__3pvZa\",\"dataBlock\":\"ImageWithText_dataBlock__1v8nZ\",\"dataBlockImage\":\"ImageWithText_dataBlockImage__wQVvC\",\"dndOverlay\":\"ImageWithText_dndOverlay__NqD7_\",\"dataBlockText\":\"ImageWithText_dataBlockText__2tAgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBlockDiv\":\"Text_dataBlockDiv__2Zoq9\",\"dataBlock\":\"Text_dataBlock__2XOLN\",\"dataBlockImage\":\"Text_dataBlockImage__19Z14\",\"dndOverlay\":\"Text_dndOverlay__1zHGJ\",\"removeInputStyling\":\"Text_removeInputStyling__3MJmX\",\"textBlock\":\"Text_textBlock__l5SFY\",\"text\":\"Text_text__1Vrv_\",\"author\":\"Text_author__I6KpJ Text_removeInputStyling__3MJmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBlockDiv\":\"Image_dataBlockDiv__EYIH3\",\"dataBlock\":\"Image_dataBlock__QyzjU\",\"dataBlockImage\":\"Image_dataBlockImage__1wNyR\",\"dndOverlay\":\"Image_dndOverlay__Z9dDu\",\"dataBlockText\":\"Image_dataBlockText__1kc0W\"};","import React, { useEffect, useState, useReducer } from \"react\";\nimport GhostContentAPI from \"@tryghost/content-api\";\n\nimport styles from \"./fetchGhost.module.css\";\n\nimport {\n  BlogNoImage,\n  BlogWithImage,\n  GalleryNoImage,\n  GalleryWithImage\n} from \"./components\";\n\nconst DEFAULT = {\n  url: \"https://gatsby-starter-blog-admin.now.sh\",\n  key: \"53321cfbcc9440e2c7554b0c91\",\n  version: \"v2\"\n};\n\nconst api = new GhostContentAPI(DEFAULT);\n\n//var counter = 0;\n// hack to move screen to top on pagination click\n\nexport const FetchGhost = ({ onFetched, limit = 3, theme = \"blog\" }) => {\n  const [pagination, setPagination] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [pageNum, setPageNum] = useState(1);\n  // paginated fetch\n  useEffect(() => {\n    fetchGhost({ limit: limit, page: pageNum })\n      .then(d => {\n        //if (counter > 0) document.getElementById(\"blog-top\").click();\n        setPagination(d.meta.pagination);\n        setPosts(d);\n        //counter++;\n      })\n      .catch(e => {\n        console.log(\"there seems to be an error from the Ghost backend: \", e);\n      });\n  }, [pageNum]);\n\n  // callback\n  useEffect(() => {\n    if (onFetched) onFetched(posts);\n  }, [posts]);\n\n  const Pagination = ({ data }) => {\n    const hasPrev = data && data.prev ? true : false;\n    const hasNext = data && data.next ? true : false;\n    return (\n      <div className={styles.paginationDiv}>\n        <span className={styles.paginationLeft}>\n          <button\n            className={hasPrev ? styles.pagebtn : styles.disabled}\n            onClick={() => setPageNum(data.prev)}\n          >\n            {\"<\"}\n          </button>\n        </span>\n        <span className={styles.paginationText}>\n          {data.page} of {data.pages} pages\n        </span>\n        <span className={styles.paginationRight}>\n          <button\n            className={hasNext ? styles.pagebtn : styles.disabled}\n            onClick={() => setPageNum(data.next)}\n          >\n            {\">\"}\n          </button>\n        </span>\n      </div>\n    );\n  };\n\n  const WithImage = ({ theme, ...rest }) => {\n    if (theme === \"gallery\") return <GalleryWithImage {...rest} />;\n    else if (theme === \"blog\") return <BlogWithImage {...rest} />;\n    return <GalleryWithImage {...rest} />;\n  };\n\n  const NoImage = ({ theme, ...rest }) => {\n    if (theme === \"gallery\") return <GalleryNoImage {...rest} />;\n    else if (theme === \"blog\") return <BlogNoImage {...rest} />;\n    return <GalleryNoImage {...rest} />;\n  };\n\n  return (\n    <div\n      className={styles.containerDiv}\n      style={{\n        flexDirection: theme === \"blog\" ? \"column\" : \"row\",\n        //justifyContent: \"flex-start\",\n        alignItems: \"center\"\n      }}\n    >\n      <a href=\"#blog\" id=\"blog-top\" />\n      {posts.map((p, i) => {\n        if (p.feature_image) {\n          return (\n            <WithImage key={p.comment_id} index={i} theme={theme} post={p} />\n          );\n        } else {\n          return (\n            <NoImage key={p.comment_id} index={i} theme={theme} post={p} />\n          );\n        }\n      })}\n      <br />\n      <Pagination data={pagination} />\n    </div>\n  );\n};\n\nconst fetchGhost = props => {\n  return api.posts\n    .browse({\n      limit: (props && props.limit) || 20,\n      page: (props && props.page) || 1\n    })\n    .then(posts => {\n      return posts;\n    })\n    .catch(e => console.log(e));\n};\n\nexport default fetchGhost;\n","import fetchGhost from \"./fetchGhost\";\nexport default fetchGhost;\n\nexport { FetchGhost } from \"./fetchGhost\";\n","import React, { useContext, createContext } from \"react\";\n\nconst ThemeContext = createContext([]);\n\nexport default ThemeContext;\n","import React, { useState, useEffect, useContext, createContext } from \"react\";\n\nimport styles from \"./Comment.module.css\";\n\nimport Markdown from \"./Markdown\";\nimport Rating from \"./Rating\";\nimport Reply from \"./Reply\";\n\nexport const CommentContext = createContext({});\n\nfunction compare(a1, a2) {\n  if (JSON.stringify(a1) === JSON.stringify(a2)) {\n    return true;\n  }\n  return false;\n}\n\nexport function gen_comments(comments, colorindex, path) {\n  return comments.map((comment, i) => {\n    return (\n      <Comment\n        username={comment.username}\n        date={comment.date}\n        text={comment.text}\n        votes={comment.votes}\n        colorindex={colorindex}\n        key={i}\n        path={[...path, i]}\n        comments={comment.comments}\n      />\n    );\n  });\n}\n\nconst Comment = props => {\n  const [replying, setReplying] = useContext(CommentContext);\n  const [minimized, setMinimized] = useState(false);\n  const [hidden, setHidden] = useState(false);\n\n  useEffect(() => {\n    const hide = async () => {\n      if (props.path.length > 2 && props.path.length % 2 === 0) {\n        setHidden(true);\n      }\n      if (props.path[props.path.length - 1] > 3) {\n        setHidden(true);\n      }\n    };\n\n    hide();\n  }, [props.path]);\n\n  return (\n    <div\n      {...props}\n      className={styles.comment}\n      styles={{\n        background: props =>\n          props.colorindex % 2 === 0 ? \"#161C21\" : \"#13181D\"\n      }}\n    >\n      {hidden ? (\n        <button\n          id=\"showMore\"\n          onClick={() => {\n            setHidden(false);\n          }}\n        >\n          Show More Replies\n        </button>\n      ) : (\n        <>\n          <div id=\"left\" className={minimized ? \"hidden\" : \"\"}>\n            <Rating votes={props.votes} />\n          </div>\n          <div id=\"right\">\n            <div id=\"top\">\n              <span\n                className=\"minimize\"\n                onClick={() => {\n                  setMinimized(!minimized);\n                }}\n              >\n                [{minimized ? \"+\" : \"-\"}]\n              </span>\n              <span id=\"username\">\n                <a href=\"\">{props.username}</a>\n              </span>\n              <span id=\"date\">\n                <a href=\"\">{props.date}</a>\n              </span>\n            </div>\n            <div id=\"content\" className={minimized ? \"hidden\" : \"\"}>\n              <Markdown options={{ forceBlock: true }}>{props.text}</Markdown>\n            </div>\n            <div id=\"actions\" className={minimized ? \"hidden\" : \"\"}>\n              <span\n                className={`${compare(replying, props.path) ? \"selected\" : \"\"}`}\n                onClick={() => {\n                  if (compare(replying, props.path)) {\n                    setReplying([]);\n                  } else {\n                    setReplying(props.path);\n                  }\n                }}\n              >\n                reply\n              </span>\n              <span>report</span>\n            </div>\n            <Reply\n              className={\n                compare(replying, props.path) && !minimized ? \"\" : \"hidden\"\n              }\n            />\n            <div className={`${styles.comment} ${minimized ? \"hidden\" : \"\"}`}>\n              {gen_comments(props.comments, props.colorindex + 1, [\n                ...props.path\n              ])}\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nconst Comment2 = () => {\n  return <p>hey</p>;\n};\n\nconsole.log(Comment2);\n\nexport default Comment;\n","import React, { useState, useContext, createContext } from \"react\";\n\nimport ThemeContext from \"./context\";\n\nimport styles from \"./index.module.css\";\n\nimport Comments from \"./Comments\";\n\nfunction App(props) {\n  const [theme, setTheme] = useState(\"light\");\n\n  return (\n    <div {...props} className={styles.commentBox}>\n      <h1>Work in Progress port</h1>\n      <Comments />\n    </div>\n  );\n}\n\nexport default App;\n","import firebase from \"firebase\";\n\nconst config = {\n  apiKey: process.env.apiKey,\n  authDomain: process.env.authDomain,\n  databaseURL: process.env.databaseURL,\n  projectId: process.env.projectId,\n  storageBucket: process.env.storageBucket,\n  messagingSenderId: process.env.messagingSenderId\n};\n\nconst reactConfig = {};\nObject.keys(config).map(v => {\n  reactConfig[v] = process.env[`REACT_APP_${v}`];\n});\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(reactConfig);\n}\n\nexport default firebase;\n//module.exports = firebase;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\n\nimport ReactJson from \"react-json-view\";\nimport styles from \"./Read.module.css\";\n\nexport const ReadFromFirebase = (databaseRef = \"dev-playground\", callback) => {\n  return firebase\n    .database()\n    .ref(databaseRef)\n    .on(\"value\", snapshot => {\n      const vals = snapshot.val();\n      callback(vals);\n    });\n};\n\nexport const ShowDB = ({ databaseRef = \"dev-playground\", onDBUpdate }) => {\n  const [dbState, setDBState] = useState({});\n\n  useEffect(() => {\n    firebase\n      .database()\n      .ref(databaseRef)\n      .on(\n        \"value\",\n        snapshot => {\n          const vals = snapshot.val();\n          setDBState(vals);\n          if (onDBUpdate) onDBUpdate(vals);\n        },\n        [dbState]\n      );\n  }, []);\n\n  return (\n    <div className={styles.json}>\n      <ReactJson\n        style={{ overflow: \"hidden\" }}\n        src={dbState}\n        theme=\"summerfruit\"\n      />\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport Dropzone from \"react-dropzone\";\nimport { DebounceInput } from \"react-debounce-input\";\n\nimport styles from \"./ImageWithText.module.css\";\n\nconst DataBlock = ({ data, onUpdate, mode }) => {\n  const [title, setTitle] = useState(data.title);\n  const [image, setImage] = useState(data.imageData);\n\n  const handleUpdate = d => {\n    if (d.type === \"title\") {\n      setTitle(d.data);\n    } else if (d.type === \"imageData\") {\n      setImage(d.data);\n    }\n\n    if (onUpdate) {\n      let update = {};\n      update[d.type] = d.data;\n      const out = { ...data, ...update };\n\n      onUpdate(out);\n    }\n  };\n\n  const handleDrop = (acceptedFiles, rejectedFiles) => {\n    // do something\n    const f = acceptedFiles[0];\n\n    const reader = new FileReader();\n    reader.onload = res => {\n      const b64 = res.target.result;\n      handleUpdate({ type: \"imageData\", data: b64 });\n    };\n\n    reader.readAsDataURL(f);\n  };\n\n  if (mode === \"edit\") {\n    return (\n      <div className={styles.dataBlockDiv}>\n        <Dropzone onDrop={handleDrop}>\n          {({ getRootProps, getInputProps, isDragActive }) => {\n            return (\n              <div\n                {...getRootProps()}\n                // className={styles.dropzone + \" \" + isDragActive ? \"active\" : \"\"}\n                className={styles.dataBlock}\n              >\n                <input {...getInputProps()} />\n                {isDragActive ? (\n                  <span className={styles.dndOverlay}>\n                    Try dropping some files here, <br />\n                    or click to select files to upload.\n                  </span>\n                ) : (\n                  \"\"\n                )}\n                <img\n                  className={styles.dataBlockImage}\n                  src={image}\n                  alt={data.title}\n                />\n              </div>\n            );\n          }}\n        </Dropzone>\n\n        <DebounceInput\n          minLength={2}\n          debounceTimeout={1000}\n          className={styles.dataBlockText}\n          value={title}\n          onChange={e => handleUpdate({ type: \"title\", data: e.target.value })}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.dataBlock}>\n          <img\n            className={styles.dataBlockImage}\n            src={data.imageData}\n            alt={data.title}\n          />\n          <p className={styles.dataBlockText}>{data.title}</p>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DataBlock;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport styles from \"./Text.module.css\";\n\nlet textDims = {\n  height: 0,\n  width: 0\n};\n\nconst DataBlock = ({ data, onUpdate, mode }) => {\n  const textRef = useRef(null);\n  const [text, setText] = useState({});\n  const [textSizes, setTextSizes] = useState({});\n\n  const [author, setAuthor] = useState({});\n\n  // on new data received (+ first mount)\n  useEffect(() => {\n    let incomingData;\n    // try parsing json into array\n    try {\n      const k = Object.keys(data);\n      incomingData = k.map(k => data[k]);\n    } catch {\n      incomingData = data;\n    }\n\n    // set all the blocks\n    incomingData.map((d, i) => {\n      if (d.type === \"text\") {\n        setText({ id: i, data: d.data });\n      } else if (d.type === \"author\") {\n        setAuthor({ id: i, data: d.data });\n      }\n    });\n\n    // get text height (for textarea)\n    // wait for it to load (delay)\n    if (mode !== \"edit\") {\n      setTimeout(() => {\n        // setTextSizes({\n        //   height: textRef.current.clientHeight,\n        //   width: textRef.current.clientWidth\n        // });\n        textDims = {\n          height: textRef.current.clientHeight,\n          width: textRef.current.clientWidth\n        };\n      }, 500);\n    }\n  }, [data]);\n\n  const handleUpdate = d => {\n    if (d.type === \"text\") {\n      setText(d.data);\n    } else if (d.type === \"author\") {\n      setAuthor(d.data);\n    }\n\n    // TODO: onUpdate right now is a NOPE. only send dispatches\n    // if (onUpdate) {\n    //   let update = {};\n    //   update[d.type] = d.data;\n    //   const out = { ...data, ...update };\n\n    //   onUpdate(out);\n    // }\n  };\n\n  if (mode === \"edit\") {\n    // edit mode\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.textBlock}>\n          <textarea\n            className={styles.text + \" \" + styles.removeInputStyling}\n            style={{ height: textDims.height }}\n            value={text.data}\n            onChange={e =>\n              handleUpdate({ type: \"text\", data: e.target.value, id: text.id })\n            }\n          />\n\n          <br />\n          <input\n            className={styles.author}\n            value={author.data}\n            onChange={e =>\n              handleUpdate({ type: \"author\", data: e.target.value })\n            }\n          />\n        </div>\n      </div>\n    );\n  } else {\n    // normal mode\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.textBlock}>\n          <p key={text.id} className={styles.text} ref={textRef}>\n            {text.data}\n          </p>\n          <br />\n          <h3 className={styles.author}>{author.data}</h3>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DataBlock;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nimport styles from \"./Image.module.css\";\n\nconst DataBlock = ({ data, onUpdate, mode }) => {\n  const textRef = useRef(null);\n  const [text, setText] = useState({});\n  const [image, setImage] = useState(data.imageData);\n\n  const [author, setAuthor] = useState({});\n\n  // on new data received (+ first mount)\n  useEffect(() => {\n    let incomingData;\n    // try parsing json into array\n    try {\n      const k = Object.keys(data);\n      incomingData = k.map(k => data[k]);\n    } catch {\n      incomingData = data;\n    }\n\n    console.log(incomingData);\n\n    // set all the blocks\n    incomingData.map((d, i) => {\n      if (d.type === \"text\") {\n        setText({ id: i, data: d.data });\n      } else if (d.type === \"author\") {\n        setAuthor({ id: i, data: d.data });\n      } else if (d.type === \"imageData\") {\n        setImage(d.data);\n      }\n    });\n  }, [data]);\n\n  const handleUpdate = d => {\n    if (d.type === \"text\") {\n      const copy = text;\n      const newState = copy.map(v =>\n        v.id === d.id ? { id: d.id, data: d.data } : v\n      );\n      setText(newState);\n    } else if (d.type === \"author\") {\n      setAuthor(d.data);\n    } else if (d.type === \"imageData\") {\n      setImage(d.data);\n    }\n\n    // TODO: onUpdate right now is a NOPE. only send dispatches\n    // if (onUpdate) {\n    //   let update = {};\n    //   update[d.type] = d.data;\n    //   const out = { ...data, ...update };\n\n    //   onUpdate(out);\n    // }\n  };\n\n  const handleDrop = (acceptedFiles, rejectedFiles) => {\n    // do something\n    const f = acceptedFiles[0];\n\n    const reader = new FileReader();\n    reader.onload = res => {\n      const b64 = res.target.result;\n      handleUpdate({ type: \"imageData\", data: b64 });\n    };\n\n    reader.readAsDataURL(f);\n  };\n\n  if (mode === \"edit\") {\n    // edit mode\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.textBlock}>\n          <Dropzone onDrop={handleDrop}>\n            {({ getRootProps, getInputProps, isDragActive }) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  // className={styles.dropzone + \" \" + isDragActive ? \"active\" : \"\"}\n                  className={styles.dataBlock}\n                >\n                  <input {...getInputProps()} />\n                  {isDragActive ? (\n                    <span className={styles.dndOverlay}>\n                      Try dropping some files here, <br />\n                      or click to select files to upload.\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                  <img\n                    className={styles.dataBlockImage}\n                    src={image}\n                    alt={data.title}\n                  />\n                </div>\n              );\n            }}\n          </Dropzone>\n\n          {/* <br />\n          <input\n            className={styles.author}\n            value={author.data}\n            onChange={e =>\n              handleUpdate({ type: \"author\", data: e.target.value })\n            }\n          /> */}\n        </div>\n      </div>\n    );\n  } else {\n    // normal mode\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.dataBlock}>\n          <img className={styles.dataBlockImage} src={image} alt={data.title} />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DataBlock;\n","import Generic from \"./generic/ImageWithText\";\n\nimport Text from \"./aaronc/Text\";\nimport Image from \"./aaronc/Image\";\nimport PanningImage from \"./aaronc/PanningImage\";\n\nexport const AaronC = {\n  text: Text,\n  image: Image,\n  heroImage: PanningImage\n};\n\nexport default Generic;\n\nconst types = {\n  data: \"string\",\n  imageData: \"base64 string || image url\",\n  url: \"url\"\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport Dropzone from \"react-dropzone\";\n\nimport styles from \"./PanningImage.module.css\";\n\nconst DataBlock = ({ data, onUpdate, mode }) => {\n  const textRef = useRef(null);\n  const [text, setText] = useState({});\n  const [image, setImage] = useState(data.imageData);\n\n  const [author, setAuthor] = useState({});\n\n  // on new data received (+ first mount)\n  useEffect(() => {\n    let incomingData;\n    // try parsing json into array\n    try {\n      const k = Object.keys(data);\n      incomingData = k.map(k => data[k]);\n    } catch {\n      incomingData = data;\n    }\n\n    console.log(incomingData);\n\n    // set all the blocks\n    incomingData.map((d, i) => {\n      if (d.type === \"text\") {\n        setText({ id: i, data: d.data });\n      } else if (d.type === \"author\") {\n        setAuthor({ id: i, data: d.data });\n      } else if (d.type === \"imageData\") {\n        setImage(d.data);\n      }\n    });\n  }, [data]);\n\n  const handleUpdate = d => {\n    if (d.type === \"text\") {\n      const copy = text;\n      const newState = copy.map(v =>\n        v.id === d.id ? { id: d.id, data: d.data } : v\n      );\n      setText(newState);\n    } else if (d.type === \"author\") {\n      setAuthor(d.data);\n    } else if (d.type === \"imageData\") {\n      setImage(d.data);\n    }\n\n    // TODO: onUpdate right now is a NOPE. only send dispatches\n    // if (onUpdate) {\n    //   let update = {};\n    //   update[d.type] = d.data;\n    //   const out = { ...data, ...update };\n\n    //   onUpdate(out);\n    // }\n  };\n\n  const handleDrop = (acceptedFiles, rejectedFiles) => {\n    // do something\n    const f = acceptedFiles[0];\n\n    const reader = new FileReader();\n    reader.onload = res => {\n      const b64 = res.target.result;\n      handleUpdate({ type: \"imageData\", data: b64 });\n    };\n\n    reader.readAsDataURL(f);\n  };\n\n  if (mode === \"edit\") {\n    // edit mode\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.heroContainer}>\n          <Dropzone onDrop={handleDrop}>\n            {({ getRootProps, getInputProps, isDragActive }) => {\n              return (\n                <div\n                  {...getRootProps()}\n                  // className={styles.dropzone + \" \" + isDragActive ? \"active\" : \"\"}\n                  className={styles.dataBlock}\n                >\n                  <input {...getInputProps()} />\n                  {isDragActive ? (\n                    <span className={styles.dndOverlay}>\n                      Try dropping some files here, <br />\n                      or click to select files to upload.\n                    </span>\n                  ) : (\n                    \"\"\n                  )}\n                  <img\n                    className={\n                      styles.dataBlockImage +\n                      \" \" +\n                      styles.heroImg +\n                      \" \" +\n                      styles.animated\n                    }\n                    src={image}\n                    alt={data.title}\n                  />\n                </div>\n              );\n            }}\n          </Dropzone>\n        </div>\n      </div>\n    );\n  } else {\n    // normal mode\n    return (\n      <div className={styles.dataBlockDiv}>\n        <div className={styles.dataBlock}>\n          <div className={styles.heroContainer}>\n            <img\n              className={\n                styles.dataBlockImage +\n                \" \" +\n                styles.heroImg +\n                \" \" +\n                styles.animated\n              }\n              src={image}\n              alt={data.title}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default DataBlock;\n","import React, { useState, useEffect } from \"react\";\nimport firebase from \"./lib/firebase\";\nimport ReactJson from \"react-json-view\";\n\nimport styles from \"./Update.module.css\";\n\nimport { ShowDB, ReadFromFirebase } from \"./Read\";\nimport DataBlock, { AaronC } from \"./blocks\";\n\nconst DB_REF = \"0003-aaron-chew/data\";\n\nexport const updateDB = (databaseRef = DB_REF, data) => {\n  if (data.title) {\n    firebase\n      .database()\n      .ref(databaseRef + \"/\" + data.title)\n      .set(data);\n  } else {\n    firebase\n      .database()\n      .ref(databaseRef)\n      .push(data);\n  }\n};\n\nexport const Update = ({ databaseRef = DB_REF, onUpdated, children }) => {\n  const [state, setState] = useState({ url: \"\", title: \"\", imageBase64: \"\" });\n  const [content, setContent] = useState(\"\");\n\n  // GET STUFF\n  const [dbRef, setDbRef] = useState();\n  const [dbState, setDBState] = useState({});\n  const [newDBState, setNewDBState] = useState(dbState);\n  useEffect(() => {\n    const ref = firebase.database().ref(databaseRef);\n    setDbRef(ref);\n\n    ref.on(\"value\", snapshot => {\n      let data = snapshot.val();\n      const keys = Object.keys(snapshot.val());\n      keys.map(k => {\n        data[k] = { ...data[k], uid: k };\n      });\n      setDBState(data);\n    });\n  }, []);\n\n  // CREATE EDITABLE COMPONENTS\n  const [editable, setEditable] = useState(false);\n  useEffect(() => {\n    if (editable && dbRef) {\n      // editable mode\n      const data = dbState;\n      const keys = Object.keys(data);\n\n      const output = keys.map((k, i) => {\n        if (data[k].type === \"data\") {\n          return (\n            <Editable key={k} uid={k} toDelete={!dbState[k]}>\n              <DataBlock\n                data={data[k]}\n                mode=\"edit\"\n                onUpdate={handleChange}\n                uid={k}\n              />\n            </Editable>\n          );\n        } else if (data[k].type === \"text\") {\n          return (\n            <Editable key={k} uid={k} toDelete={!dbState[k]}>\n              <AaronC.text\n                key={k}\n                data={data[k]}\n                mode=\"edit\"\n                onUpdate={handleChange}\n              />\n            </Editable>\n          );\n        } else if (data[k].type === \"image\") {\n          return (\n            <AaronC.image\n              key={k}\n              data={data[k]}\n              mode=\"edit\"\n              onUpdate={handleChange}\n            />\n          );\n        } else if (data[k].type === \"heroImage\") {\n          return (\n            <AaronC.heroImage\n              key={k}\n              data={data[k]}\n              mode=\"edit\"\n              onUpdate={handleChange}\n            />\n          );\n        } else {\n          return (\n            <Editable key={k} uid={k} toDelete={!dbState[k]}>\n              <p key={k}>this block editing function is not supported yet.</p>\n            </Editable>\n          );\n        }\n      });\n\n      setContent(output);\n    } else if (!editable && dbRef) {\n      // non editable mode\n      const data = dbState;\n      const keys = Object.keys(data);\n\n      const output = keys.map((k, i) => {\n        if (data[k].type === \"data\") {\n          return <DataBlock key={k} data={data[k]} />;\n        } else if (data[k].type === \"text\") {\n          return <AaronC.text key={k} data={data[k]} />;\n        } else if (data[k].type === \"image\") {\n          return <AaronC.image key={k} data={data[k]} />;\n        } else if (data[k].type === \"heroImage\") {\n          return <AaronC.heroImage key={k} data={data[k]} />;\n        } else {\n          return (\n            <div key={k} style={{ margin: \"1rem 0\" }}>\n              <ReactJson\n                style={{ overflow: \"hidden\", textAlign: \"left\" }}\n                src={data[k]}\n                theme=\"summerfruit\"\n              />\n            </div>\n          );\n        }\n      });\n\n      setContent(output);\n    }\n  }, [editable, dbRef, dbState]);\n\n  const Editable = ({ children, uid, toDelete }) => {\n    return (\n      <div\n        key={uid}\n        className={styles.editable + \" \" + (toDelete ? styles.warning : \"\")}\n      >\n        <button\n          className={styles.editButton}\n          style={{\n            visibility: editable ? \"visible\" : \"hidden\"\n          }}\n          onClick={() => handleDelete(uid)}\n        >\n          🧨\n        </button>\n        {children}\n      </div>\n    );\n  };\n\n  // EDITS\n  const handleChange = d => {\n    let newDBState = { ...dbState };\n    newDBState[d.uid] = d;\n    setNewDBState(newDBState);\n  };\n  // UPDATE / DELETE\n  const handleDBUpdate = () => {\n    console.log(\"publishing\");\n    console.log(newDBState);\n    // \"publish\" button\n    const uidsToDelete = trashUID;\n    firebase\n      .database()\n      .ref(databaseRef)\n      .set(newDBState); // this triggers a new render\n\n    // sets the new db state\n    //setDBState(newDBState);\n\n    setEditable(false);\n  };\n  // PREPARE TO DELETE\n  const [trashUID, setTrashUID] = useState([]);\n  const handleDelete = v => {\n    let newDBState = { ...dbState };\n    delete newDBState[v];\n    setDBState(newDBState);\n    setTrashUID([...trashUID, v]);\n  };\n\n  return (\n    <div>\n      <h3>UPDATE (+DELETE)</h3>\n      <button\n        className={styles.modeButton}\n        style={{ backgroundColor: editable ? \"red\" : \"black\" }}\n        onClick={() => setEditable(!editable)}\n      >\n        edit\n      </button>{\" \"}\n      <button className={styles.modeButton} onClick={handleDBUpdate}>\n        publish\n      </button>\n      <br />\n      {content}\n      <br />\n      <h3>ALL DATA - REF</h3>\n      <ShowDB databaseRef={DB_REF} />\n    </div>\n  );\n};\n\nexport const bulkUpdateDB = (databaseRef = DB_REF, data) => {\n  return 0;\n};\n","import { Update } from \"./Update\";\n\nexport default Update;\n","import React, { Component } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport fetchGhost, { FetchGhost } from \"./components/Ghost\";\nimport Comment from \"./components/CommentBox\";\nimport Editable from \"./components/Editable\";\n\nclass App extends Component {\n  state = { posts: [] };\n  componentDidMount() {\n    fetchGhost().then(d => this.setState({ posts: d }));\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n        {/* <FetchGhost theme=\"gallery\" limit={10} /> */}\n        <Editable />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__37a1x\",\"commentCount\":\"Comments_commentCount__1eE9F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addInput\":\"Update_addInput__2Mln-\",\"inputLabel\":\"Update_inputLabel__2PIT0\",\"editable\":\"Update_editable__LDE1E\",\"warning\":\"Update_warning__1YjpF\",\"editButton\":\"Update_editButton__kaF8I\",\"modeButton\":\"Update_modeButton__qCzgv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dataBlockDiv\":\"PanningImage_dataBlockDiv__2PgnQ\",\"dataBlock\":\"PanningImage_dataBlock__1NBdo\",\"dataBlockImage\":\"PanningImage_dataBlockImage__3-gUU\",\"dndOverlay\":\"PanningImage_dndOverlay__1XgNU\",\"dataBlockText\":\"PanningImage_dataBlockText__eqbG9\",\"heroContainer\":\"PanningImage_heroContainer__1ZDRd\",\"heroImg\":\"PanningImage_heroImg__3V3L9\",\"animated\":\"PanningImage_animated__3pqDF\",\"heroPan\":\"PanningImage_heroPan__3QGlQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postDiv\":\"Gallery_postDiv__3TqMl\",\"postDivBorder\":\"Gallery_postDivBorder__1JBxF\",\"postDivPadding\":\"Gallery_postDivPadding__3i-Hf\",\"imgDiv\":\"Gallery_imgDiv__3bSbh\",\"img\":\"Gallery_img__2zB67\",\"textDiv\":\"Gallery_textDiv__SAt3L\",\"text\":\"Gallery_text__2nV7h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comment\":\"Comment_comment__1iY7T\",\"showMore\":\"Comment_showMore__3a0Gc\",\"comments\":\"Comment_comments__Dj7z1\",\"hidden\":\"Comment_hidden__1U7BQ\",\"left\":\"Comment_left__38maD\",\"right\":\"Comment_right__2sPTt\",\"top\":\"Comment_top__1x2rf\",\"minimize\":\"Comment_minimize__Bpnj_\",\"username\":\"Comment_username__6TkHb\",\"date\":\"Comment_date__1XQTV\",\"content\":\"Comment_content__rOALj\",\"actions\":\"Comment_actions__2UfeH\",\"selected\":\"Comment_selected__qr6al\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"Markdown_code__W8ZFb\",\"blockquote\":\"Markdown_blockquote__gzC2c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"reply\":\"Reply_reply__1_Yt-\",\"hidden\":\"Reply_hidden__30eBS\",\"panel\":\"Reply_panel__1evr6\",\"comment_as\":\"Reply_comment_as__1_Krh\",\"username\":\"Reply_username__3l-ig\",\"button\":\"Reply_button__3sTYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3mEKn\",\"circle\":\"Button_circle__1WTeJ\",\"clickEffect\":\"Button_clickEffect__2vsL9\"};","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"commentBox\":\"CommentBox_commentBox__259FB\",\"a\":\"CommentBox_a__2O_UM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postDiv\":\"Blog_postDiv__avk-o\",\"postDivFull\":\"Blog_postDivFull__2LtqX\",\"postDivBorder\":\"Blog_postDivBorder__1UOvw\",\"postDivPadding\":\"Blog_postDivPadding__yWIiN\",\"imgDiv\":\"Blog_imgDiv__3BdGe\",\"img\":\"Blog_img__zf-0m\",\"textDiv\":\"Blog_textDiv__sWNs6\",\"text\":\"Blog_text__RM1ug\",\"flip\":\"Blog_flip__3ybeV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"rating\":\"Rating_rating__1-wRS\",\"count\":\"Rating_count__b6I8R\",\"up\":\"Rating_up__2kah6\",\"down\":\"Rating_down__2JFUk\",\"thumbs_up\":\"Rating_thumbs_up__1Me8m\",\"thumbs_down\":\"Rating_thumbs_down__2gfVh\",\"selected\":\"Rating_selected__1PCpU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__12fj1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"json\":\"Read_json__3rAR1\"};"],"sourceRoot":""}